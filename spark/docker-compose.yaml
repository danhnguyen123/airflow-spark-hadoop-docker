version: '3.8'
services:
  spark-master:
    container_name: master
    build:
      context: .
      dockerfile: ./spark-base.Dockerfile
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./conf/log4j.properties:/opt/bitnami/spark/conf/log4j.properties
      - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./:/opt/workspace
      - ./app:/tmp/local/spark/app #Spark Scripts (Must be the same path in airflow and Spark Cluster)
      - ./resources:/tmp/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
    ports:
      - 7077:7077
      - 8080:8080
    networks:
     - bigdata-network

  spark-worker-1:
    container_name: worker-1
    build:
      context: .
      dockerfile: ./spark-base.Dockerfile
    # command: bash -c "sbin/start-history-server.sh  &&  bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077 >> logs/spark-worker.out && "
    command: bash -c "sbin/start-worker.sh spark://spark-master:7077"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./conf/log4j.properties:/opt/bitnami/spark/conf/log4j.properties
      - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./:/opt/workspace
      - ./app:/tmp/local/spark/app #Spark Scripts (Must be the same path in airflow and Spark Cluster)
      - ./resources:/tmp/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
    ports:
      - 8081:8081    
    depends_on:
      - spark-master
    networks:
     - bigdata-network

  spark-worker-2:
    container_name: worker-2
    build:
      context: .
      dockerfile: ./spark-base.Dockerfile
    # command: bash -c "sbin/start-history-server.sh  &&  bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077 >> logs/spark-worker.out"
    command: bash -c "sbin/start-worker.sh spark://spark-master:7077"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./conf/log4j.properties:/opt/bitnami/spark/conf/log4j.properties
      - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./:/opt/workspace
      - ./app:/tmp/local/spark/app #Spark Scripts (Must be the same path in airflow and Spark Cluster)
      - ./resources:/tmp/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
    ports:
      - 8082:8081
    depends_on:
      - spark-master
    networks:
     - bigdata-network

  spark-history-server:
    container_name: spark-history-server
    build:
      context: .
      dockerfile: ./spark-base.Dockerfile
    # command: bash -c "sbin/start-history-server.sh  &&  bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077 >> logs/spark-worker.out"
    command: bash -c "sbin/start-history-server.sh"
    volumes:
      - ./conf/log4j.properties:/opt/bitnami/spark/conf/log4j.properties
      - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
    ports:
      - 18080:18080
    depends_on:
      - spark-master
    networks:
     - bigdata-network

  jupyterlab:
    build:
      context: .
      dockerfile: ./jupyterlab.Dockerfile
    container_name: jupyterlab
    ports:
      - 8888:8888
    volumes:
      - ./:/opt/workspace
    networks:
     - bigdata-network

networks:
  bigdata-network:
    external: true
